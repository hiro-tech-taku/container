#!/bin/sh
set -eu

# Validate required variables
if [ -z "${REMOTE_HOST:-}" ]; then
  echo "ERROR: REMOTE_HOST is required (IP/hostname of upstream SNMP agent)" >&2
  exit 1
fi


# Defaults
REMOTE_PORT="${REMOTE_PORT:-161}"
REMOTE_COMMUNITY="${REMOTE_COMMUNITY:-public}"
PROXY_OID="${PROXY_OID:-.1}"
RO_COMMUNITY="${RO_COMMUNITY:-public}"
RO_SOURCE="${RO_SOURCE:-default}"
SYS_LOCATION="${SYS_LOCATION:-Docker SNMP Proxy}"
SYS_CONTACT="${SYS_CONTACT:-admin@example.com}"
LISTEN_ADDRESSES="${LISTEN_ADDRESSES:-udp:0.0.0.0:161}"

# Sanitize Net-SNMP env that may contain Windows-style paths
unset MIBS MIBDIRS SNMPCONFPATH || true

# Build rocommunity line (omit source when default/empty)
RO_LINE="rocommunity ${RO_COMMUNITY}"
if [ -n "${RO_SOURCE}" ] && [ "${RO_SOURCE}" != "default" ]; then
  RO_LINE="${RO_LINE} ${RO_SOURCE}"
fi

mkdir -p /etc/snmp

cat > /etc/snmp/snmpd.conf <<EOF
# Generated by docker-entrypoint.sh
agentAddress ${LISTEN_ADDRESSES}

sysLocation ${SYS_LOCATION}
sysContact ${SYS_CONTACT}

# Read-only community for clients of this proxy
${RO_LINE}

# Proxy subtree to remote SNMP agent
proxy -v 2c -c ${REMOTE_COMMUNITY} ${REMOTE_HOST}:${REMOTE_PORT} ${PROXY_OID}

# Reduce noise in logs
dontLogTCPWrappersConnects yes
EOF

exec "$@"